<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.tedu.zdsub.dao.SchoolMapper">
  <resultMap id="BaseResultMap" type="cn.tedu.zdsub.pojo.School">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="SCH_NAME" jdbcType="VARCHAR" property="schName" />
    <result column="SUP_HISTORY" jdbcType="VARCHAR" property="supHistory" />
    <result column="MESSAGE" jdbcType="VARCHAR" property="message" />
    <result column="REC_SCHOOL" jdbcType="INTEGER" property="recSchool" />
    <result column="IS_ZUP" jdbcType="INTEGER" property="isZup" />
    <result column="CREATE_TIME" jdbcType="VARCHAR" property="createTime" />
    <result column="CREATE_USER" jdbcType="VARCHAR" property="createUser" />
    <result column="UPDATE_TIME" jdbcType="VARCHAR" property="updateTime" />
    <result column="UPDATE_USER" jdbcType="VARCHAR" property="updateUser" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, SCH_NAME, SUP_HISTORY, MESSAGE, REC_SCHOOL, IS_ZUP, CREATE_TIME, CREATE_USER, 
    UPDATE_TIME, UPDATE_USER
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from school
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from school
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="cn.tedu.zdsub.pojo.School">
    insert into school (ID, SCH_NAME, SUP_HISTORY, 
      MESSAGE, REC_SCHOOL, IS_ZUP, 
      CREATE_TIME, CREATE_USER, UPDATE_TIME, 
      UPDATE_USER)
    values (#{id,jdbcType=VARCHAR}, #{schName,jdbcType=VARCHAR}, #{supHistory,jdbcType=VARCHAR}, 
      #{message,jdbcType=VARCHAR}, #{recSchool,jdbcType=INTEGER}, #{isZup,jdbcType=INTEGER}, 
      #{createTime,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR}, 
      #{updateUser,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.tedu.zdsub.pojo.School">
    insert into school
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="schName != null">
        SCH_NAME,
      </if>
      <if test="supHistory != null">
        SUP_HISTORY,
      </if>
      <if test="message != null">
        MESSAGE,
      </if>
      <if test="recSchool != null">
        REC_SCHOOL,
      </if>
      <if test="isZup != null">
        IS_ZUP,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="createUser != null">
        CREATE_USER,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="updateUser != null">
        UPDATE_USER,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="schName != null">
        #{schName,jdbcType=VARCHAR},
      </if>
      <if test="supHistory != null">
        #{supHistory,jdbcType=VARCHAR},
      </if>
      <if test="message != null">
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="recSchool != null">
        #{recSchool,jdbcType=INTEGER},
      </if>
      <if test="isZup != null">
        #{isZup,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.tedu.zdsub.pojo.School">
    update school
    <set>
      <if test="schName != null">
        SCH_NAME = #{schName,jdbcType=VARCHAR},
      </if>
      <if test="supHistory != null">
        SUP_HISTORY = #{supHistory,jdbcType=VARCHAR},
      </if>
      <if test="message != null">
        MESSAGE = #{message,jdbcType=VARCHAR},
      </if>
      <if test="recSchool != null">
        REC_SCHOOL = #{recSchool,jdbcType=INTEGER},
      </if>
      <if test="isZup != null">
        IS_ZUP = #{isZup,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        CREATE_USER = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        UPDATE_USER = #{updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.tedu.zdsub.pojo.School">
    update school
    set SCH_NAME = #{schName,jdbcType=VARCHAR},
      SUP_HISTORY = #{supHistory,jdbcType=VARCHAR},
      MESSAGE = #{message,jdbcType=VARCHAR},
      REC_SCHOOL = #{recSchool,jdbcType=INTEGER},
      IS_ZUP = #{isZup,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      CREATE_USER = #{createUser,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=VARCHAR},
      UPDATE_USER = #{updateUser,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  
  <select id="selectByPage" parameterType="cn.tedu.zdsub.pojo.Page" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from school
    limit #{start }, #{rows }
  </select>
  <select id="selelctCount" resultType="java.lang.Integer">
    select count(*) from school
  </select>

  <select id="selectByParam" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from school
    where SCH_NAME LIKE #{param}
    limit #{page.start }, #{page.end }
  </select>
  <select id="selectParamCount" parameterType="java.lang.String" resultType="java.lang.Integer">
    select count(*) from school
    where SCH_NAME LIKE #{param}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select 
    ID, SCH_NAME
    from school
  </select>
</mapper>